[alias]
i = "install"
r = "uninstall"
f = "search --limit 30"

[build]
jobs = 4                      # number of parallel jobs, defaults to # of CPUs
rustc = "rustc"               # the rust compiler tool
rustdoc = "rustdoc"           # the doc generator tool
target = "armv7-linux-androideabi" # build for the target triple (ignored by `cargo install`)
target-dir = "target"         # path of where to place all generated artifacts
# rustflags = ["…", "…"]        # custom flags to pass to all compiler invocations
# rustdocflags = ["…", "…"]     # custom flags to pass to rustdoc
incremental = false           # whether or not to enable incremental compilation
# dep-info-basedir = "…"        # path for the base directory for targets in depfiles

[doc]
# browser = "chromium"

[env] # environment variables for build scripts, rustc invocations, cargo run and cargo build

[future-incompat-report]
# frequency = 'always' # when to display a notification about a future incompat report

[cargo-new]
vcs = "git"                 # VCS to use ('git', 'hg', 'pijul', 'fossil', 'none')

[http]
debug = false               # HTTP debugging
# proxy = "host:port"         # HTTP proxy in libcurl format
ssl-version = "tlsv1.3"     # TLS version to use
ssl-version.max = "tlsv1.3" # maximum TLS version
ssl-version.min = "tlsv1.1" # minimum TLS version
timeout = 30                # timeout for each HTTP request, in seconds
low-speed-limit = 10        # network timeout threshold (bytes/sec)
# cainfo = "cert.pem"         # path to Certificate Authority (CA) bundle
check-revoke = true         # check for SSL certificate revocation
multiplexing = true         # HTTP/2 multiplexing
# user-agent = ""             # the user-agent header

[install]
# root = "/some/path"         # `cargo install` destination directory

[net]
retry = 2                   # network retries
git-fetch-with-cli = false  # use the `git` executable for git operations
offline = false             # do not access the network

[term]
quiet = false            # whether cargo output is quiet
verbose = false          # whether cargo provides verbose output
color = 'auto'           # whether cargo colorizes output
progress.when = 'always' # whether cargo shows progress bar
progress.width = 80      # width of progress bar
