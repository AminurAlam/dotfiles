"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

open.rules = [
  { mime = "application/x-bittorrent", use = "open" },
  { name = "*/", use = ["gui_fm", "edit", "open", "reveal"] },
  { mime = "text/*", use = ["edit", "reveal"] },
  { mime = "application/{json,x-ndjson}", use = ["edit", "reveal"] },
  { mime = "*/javascript", use = ["edit", "reveal"] },
  { mime = "{image,audio,video}/*", use = "open" },
  # Archive
  { mime = "application/{,g}zip", use = ["extract", "reveal"] },
  { mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", use = ["extract", "reveal"] },
  # Empty file
  { mime = "inode/x-empty", use = ["edit", "reveal"] },
  # Fallback
  { name = "*", use = ["open", "reveal"] },
]

[opener]
# FIX: escape filepath first
gui_fm = [{ run = 'am start -n me.zhanghai.android.files/.filelist.FileListActivity -d "$(readlink -f "$1")"' }]
edit = [
  { run = '${EDITOR:-vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
  { run = 'code %*', orphan = true, desc = "code", for = "windows" },
  { run = 'code -w %*', block = true, desc = "code (block)", for = "windows" },
]
open = [
  { run = 'xdg-open "$1"', for = "unix" },
  { run = 'am start -n me.zhanghai.android.files/.filelist.OpenFileActivity -d $(readlink -f "$1") -t $(file -b --mime-type "$1") ', for = "unix" },
  { run = 'start "" "%1"', orphan = true, for = "windows" },
]
reveal = [
  { run = 'xdg-open "$(dirname "$1")"', desc = "Reveal", for = "linux" },
  { run = 'open -R "$1"', desc = "Reveal", for = "macos" },
  { run = 'explorer /select,"%1"', orphan = true, desc = "Reveal", for = "windows" },
  { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
  { run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
  { run = 'ya pub extract --list %*', desc = "Extract here", for = "windows" },
]
play = [
  { run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
  { run = 'mpv --force-window %*', orphan = true, for = "windows" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[plugin]
fetchers = [{ id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" }]
previewers = [
  { name = "*/", run = "eza-preview" },
  # audio -> exifaudio
  { mime = "audio/*", run = "exifaudio" },
  # archive -> ouch
  { mime = "application/{,g}zip", run = "ouch" },
  { mime = "application/x-{tar,bzip2,7z-compressed,rar,xz}", run = "ouch" },
  # default
  { name = "*/", run = "folder", sync = true },
  { mime = "text/*", run = "code" },
  { mime = "*/{xml,javascript,x-wine-extension-ini}", run = "code" },
  { mime = "application/{json,x-ndjson}", run = "json" },
  { mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
  { mime = "image/*", run = "image" },
  { mime = "video/*", run = "video" },
  { mime = "application/pdf", run = "pdf" },
  { mime = "application/{,g}zip", run = "archive" },
  { mime = "application/x-{tar,bzip*,7z-compressed,xz,rar,iso9660-image}", run = "archive" },
  { mime = "font/*", run = "font" },
  { mime = "application/vnd.ms-opentype", run = "font" },
  { mime = "inode/x-empty", run = "empty" },
  { name = "*", run = "file" },
]
preloaders = [
  # Image
  # { mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
  # { mime = "image/*", run = "image" },
  # Video
  # { mime = "video/*", run = "video" },
  # PDF
  # { mime = "application/pdf", run = "pdf" },
  # Font
  # { mime = "font/*", run = "font" },
  # { mime = "application/vnd.ms-opentype", run = "font" },
]

[manager]
ratio = [0, 3, 2]
sort_by = "extension"
sort_sensitive = false
sort_reverse = false
sort_dir_first = true
sort_translit = false
linemode = "size"
show_hidden = true
show_symlink = true
scrolloff = 5
mouse_events = ["click", "scroll"]
title_format = "Yazi: {cwd}"

[preview]
wrap = "no"
tab_size = 2
max_width = 600
max_height = 900
cache_dir = ""
image_delay = 30
image_filter = "triangle"
image_quality = 75
sixel_fraction = 15
ueberzug_scale = 1
ueberzug_offset = [0, 0, 0, 0]

[tasks]
micro_workers = 10
macro_workers = 25
bizarre_retry = 5
image_alloc = 536870912  # 512MB
image_bound = [0, 0]
suppress_preload = false

[input]
cursor_blink = false
# rename
rename_title = "rename:"
rename_origin = "hovered"
rename_offset = [0, 1, 77, 3]
# cd
cd_title = "   "
cd_origin = "bottom-left"
cd_offset = [0, 0, 999, 3]
# create
create_title = "touch/mkdir:"
create_origin = "bottom-left"
create_offset = [0, 0, 999, 3]
# filter
filter_title = " 󰈲 "
filter_origin = "bottom-left"
filter_offset = [0, 0, 999, 3]
# find
find_title = [" / ", " ? "]
find_origin = "bottom-left"
find_offset = [0, 0, 999, 3]
# search
search_title = "  {n} "
search_origin = "bottom-left"
search_offset = [0, 0, 999, 3]
# shell
shell_title = ["  ", "  block "]
shell_origin = "bottom-left"
shell_offset = [0, 0, 999, 3]

[confirm]
# delete
delete_title = "Permanently delete {n} selected file{s}?"
delete_origin = "center"
delete_offset = [0, 0, 70, 20]

# overwrite
overwrite_title = "Overwrite file?"
overwrite_content = "Will overwrite the following file:"
overwrite_origin = "center"
overwrite_offset = [0, 0, 50, 15]

# quit
quit_title = "Quit?"
quit_content = "The following task is still running, are you sure you want to quit?"
quit_origin = "center"
quit_offset = [0, 0, 50, 15]

[select]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [0, 1, 50, 7]

[which]
sort_by = "none"
sort_sensitive = false
sort_reverse = false
sort_translit = false

[log]
enabled = false
