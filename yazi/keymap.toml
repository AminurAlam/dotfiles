"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

manager.prepend_keymap = [
  # plugin: https://github.com/AmeerArsala/smart-navigation.yazi
  { on = "<C-k>", run = "arrow -1", desc = "Move cursor up 1 entry" },                                                 # i promise this will make sense
  { on = "<C-j>", run = "arrow 1", desc = "Move cursor down 1 entry" },                                                # i promise this will make sense
  { on = "<C-up>", run = "arrow -1", desc = "Move cursor up 1 entry" },                                                # i promise this will make sense
  { on = "<C-down>", run = "arrow 1", desc = "Move cursor down 1 entry" },                                             # i promise this will make sense
  { on = "<Up>", run = "plugin smart-navigation --sync --args='jump -1 -1'", desc = "Go up" },
  { on = "k", run = "plugin smart-navigation --sync --args='jump -1 -1'", desc = "Go up" },
  { on = "<Down>", run = "plugin smart-navigation --sync --args='jump 1 1'", desc = "Go down" },
  { on = "j", run = "plugin smart-navigation --sync --args='jump 1 1'", desc = "Go down" },
  { on = "<Left>", run = "plugin smart-navigation --sync --args='left'", desc = "Go left" },
  { on = "h", run = "plugin smart-navigation --sync --args='left'", desc = "Go left" },
  { on = "<Right>", run = "plugin smart-navigation --sync --args='right'", desc = "Go right" },
  { on = "l", run = "plugin smart-navigation --sync --args='right'", desc = "Go right" },
  { on = "<S-Up>", run = "plugin smart-navigation --sync --args='jump -5 -50'", desc = "Jump upward" },
  { on = "<S-Down>", run = "plugin smart-navigation --sync --args='jump 5 50'", desc = "Jump downward" },
  { on = "<PageUp>", run = "plugin smart-navigation --sync --args='jump -50% -100'", desc = "Jump up half a page" },
  { on = "<PageDown>", run = "plugin smart-navigation --sync --args='jump 50% 100'", desc = "Jump down half a page" },
  { on = "<Enter>", run = "plugin smart-navigation --sync --args='open'", desc = "Open selected files" },
  { on = "^", run = "plugin smart-navigation --sync --args='left'" },
  { on = "$", run = "plugin smart-navigation --sync --args='right'" },

  # Selection
  { on = "%", run = "select_all --state=true", desc = "Select all files" },
  # Operation
  { on = "o", run = "open --interactive", desc = "Open selected files interactively" },
  { on = "O", run = "create", desc = "Create a file/directory" },
  { on = ["y", "y"], run = "yank", desc = "Yank selected files (copy)" },
  { on = "d", run = "remove --permanently", desc = "Permanently delete selected files" },
  { on = "D", run = '''shell "fish -c 'rmdir -p **'; true" --block --confirm''', desc = "purge empty directories" },
  # Copy
  { on = ["y", "p"], run = "copy path", desc = "Copy the file path" },
  { on = ["y", "d"], run = "copy dirname", desc = "Copy the directory path" },
  { on = ["y", "f"], run = "copy filename", desc = "Copy the filename" },
  { on = ["y", "b"], run = "copy name_without_ext", desc = "Copy the filename without extension" },
  # Filter & Find
  { on = "F", run = "filter --smart", desc = "Filter files" },
  # Sorting
  { on = [",", "a"], run = "sort natural --reverse=no", desc = "Sort naturally" },
  { on = [",", "e"], run = "sort extension --reverse=no", desc = "Sort by extension" },
  { on = [",", "s"], run = ["sort size --reverse=no", "linemode size"], desc = "Sort by size" },
  { on = [",", "S"], run = ["sort size --reverse", "linemode size"], desc = "Sort by size (reverse)" },
  { on = [",", "m"], run = ["sort modified --reverse=no", "linemode mtime"], desc = "Sort by modified time" },
  { on = [",", "M"], run = ["sort modified --reverse", "linemode mtime"], desc = "Sort by modified time (reverse)" },
  { on = [",", "c"], run = ["sort created --reverse=no", "linemode ctime"], desc = "Sort by created time" },
  { on = [",", "C"], run = ["sort created --reverse", "linemode ctime"], desc = "Sort by created time (reverse)" },
  # Goto
  { on = ["g", "d"], run = "cd $XDG_DOWNLOAD_DIR" },
  { on = ["g", "v"], run = "cd $XDG_VIDEOS_DIR" },
  { on = ["g", "m"], run = "cd $XDG_MUSIC_DIR" },
  { on = ["g", "p"], run = "cd $XDG_PICTURES_DIR" },
  # Tabs
  { on = "<C-Left>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "<C-Right>", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
  # Help
  { on = "?", run = "help", desc = "Open help" },
  # rename
  { on = "I", run = "rename --cursor=start --hovered" },
  { on = "i", run = "rename --cursor=before_ext --hovered" },
  { on = "a", run = "rename --cursor=end --hovered" },
  { on = "A", run = "rename --cursor=end --hovered" },
  { on = "r", run = "rename --cursor=before_ext" },
  { on = "R", run = ["select_all", "rename", "escape"] },
  { on = ["c", "c"], run = "rename --empty=all", desc = "rename empty" },
  { on = ["c", "^"], run = "rename --empty=stem --cursor=start", desc = "rename stem" },
  { on = ["c", "$"], run = "rename --empty=ext --cursor=end", desc = "rename ext" },
  # other
  # { on = ":", run = '''shell "fish -c " --block --interactive''' },
  { on = ":", run = "plugin custom-shell --args=auto" },
  { on = ".", run = "hidden toggle" },
  { on = ["s", "w"], run = "plugin eza-preview", desc = "Toggle tree/list dir preview" },
  { on = ["f", "f"], run = "plugin fzf", desc = "fzf search" },
  { on = ["f", "g"], run = "plugin rg", desc = "rg search" },
  { on = "z", run = "plugin zoxide", desc = "Jump to a directory using zoxide" },
  { on = ["s", "t"], run = "plugin --sync hide-preview" },
]

confirm.prepend_keymap = [
  { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "<C-d>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = ["g", "g"], run = "arrow -99999999", desc = "Move cursor to the top" },
  { on = "G", run = "arrow 99999999", desc = "Move cursor to the bottom" },
]

help.prepend_keymap = [{ on = "q", run = "close", desc = "Exit the process" }]
tasks.prepend_keymap = []
pick.prepend_keymap = []
input.prepend_keymap = []
completion.prepend_keymap = []
