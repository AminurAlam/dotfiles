"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

# TODO: md5 hash

manager.prepend_keymap = [
  # Navigation
  { on = "^", run = "leave" },
  { on = "$", run = "enter" },
  # Selection
  { on = "%", run = "select_all --state=true", desc = "Select all files" },
  # Operation
  { on = "o", run = "open --interactive", desc = "Open selected files interactively" },
  { on = "O", run = "create", desc = "Create a file/directory" },
  { on = ["y", "y"], run = "yank", desc = "Yank selected files (copy)" },
  { on = "d", run = "remove --permanently", desc = "Permanently delete selected files" },
  { on = "D", run = '''shell "fish -c 'rmdir -p **'; true" --block --confirm''', desc = "purge empty directories" },
  # Copy
  { on = ["y", "p"], run = "copy path", desc = "Copy the file path" },
  { on = ["y", "d"], run = "copy dirname", desc = "Copy the directory path" },
  { on = ["y", "f"], run = "copy filename", desc = "Copy the filename" },
  { on = ["y", "b"], run = "copy name_without_ext", desc = "Copy the filename without extension" },
  # Filter & Find
  { on = "F", run = "filter --smart", desc = "Filter files" },
  # Sorting
  { on = [",", "a"], run = "sort natural --reverse=no", desc = "Sort naturally" },
  { on = [",", "e"], run = "sort extension --reverse=no", desc = "Sort by extension" },
  { on = [",", "s"], run = ["sort size --reverse=no", "linemode size"], desc = "Sort by size" },
  { on = [",", "S"], run = ["sort size --reverse", "linemode size"], desc = "Sort by size (reverse)" },
  { on = [",", "m"], run = ["sort modified --reverse=no", "linemode mtime"], desc = "Sort by modified time" },
  { on = [",", "M"], run = ["sort modified --reverse", "linemode mtime"], desc = "Sort by modified time (reverse)" },
  { on = [",", "c"], run = ["sort created --reverse=no", "linemode ctime"], desc = "Sort by created time" },
  { on = [",", "C"], run = ["sort created --reverse", "linemode ctime"], desc = "Sort by created time (reverse)" },
  # Goto
  { on = ["g", "d"], run = "cd $XDG_DOWNLOAD_DIR" },
  { on = ["g", "v"], run = "cd $XDG_VIDEOS_DIR" },
  { on = ["g", "m"], run = "cd $XDG_MUSIC_DIR" },
  { on = ["g", "p"], run = "cd $XDG_PICTURES_DIR" },
  # Tabs
  { on = "<C-Left>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "<C-Right>", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
  # Help
  { on = "?", run = "help", desc = "Open help" },
  # rename
  { on = "I", run = "rename --cursor=start --hovered" },
  { on = "i", run = "rename --cursor=before_ext --hovered" },
  { on = "a", run = "rename --cursor=end --hovered" },
  { on = "A", run = "rename --cursor=end --hovered" },
  { on = "r", run = "rename --cursor=before_ext" },
  { on = "R", run = ["select_all", "rename", "escape"] },
  { on = ["c", "c"], run = "rename --empty=all", desc = "rename empty" },
  { on = ["c", "^"], run = "rename --empty=stem --cursor=start", desc = "rename stem" },
  { on = ["c", "$"], run = "rename --empty=ext --cursor=end", desc = "rename ext" },
  # other
  { on = ":", run = '''shell "fish -c " --block --interactive''' },
  { on = ".", run = "hidden toggle" },
  { on = ["s", "w"], run = "plugin eza-preview", desc = "Toggle tree/list dir preview" },
  { on = ["f", "f"], run = "plugin fzf", desc = "fzf search" },
  { on = ["f", "g"], run = "plugin rg", desc = "rg search" },
  { on = "z", run = "plugin zoxide", desc = "Jump to a directory using zoxide" },
]

tasks.prepend_keymap = [
  { on = "<Esc>", run = "close", desc = "Close task manager" },
  { on = "w", run = "close", desc = "Close task manager" },
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },
  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },
  { on = "<Enter>", run = "inspect", desc = "Inspect the task" },
  { on = "x", run = "cancel", desc = "Cancel the task" },
  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

select.prepend_keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel selection" },
  { on = "<Enter>", run = "close --submit", desc = "Submit the selection" },
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },
  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },
  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

input.prepend_keymap = [
  { on = "<C-c>", run = "close", desc = "Cancel input" },
  { on = "<Enter>", run = "close --submit", desc = "Submit input" },
  { on = "<Esc>", run = "escape", desc = "Go back the normal mode, or cancel input" },
  # Mode
  { on = "i", run = "insert", desc = "Enter insert mode" },
  { on = "a", run = "insert --append", desc = "Enter append mode" },
  { on = "I", run = ["move -999", "insert"], desc = "Move to the BOL, and enter insert mode" },
  { on = "A", run = ["move 999", "insert --append"], desc = "Move to the EOL, and enter append mode" },
  { on = "v", run = "visual", desc = "Enter visual mode" },
  { on = "V", run = ["move -999", "visual", "move 999"], desc = "Enter visual mode and select all" },
  # Character-wise movement
  { on = "h", run = "move -1", desc = "Move back a character" },
  { on = "l", run = "move 1", desc = "Move forward a character" },
  { on = "<Left>", run = "move -1", desc = "Move back a character" },
  { on = "<Right>", run = "move 1", desc = "Move forward a character" },
  { on = "<C-b>", run = "move -1", desc = "Move back a character" },
  { on = "<C-f>", run = "move 1", desc = "Move forward a character" },
  # Word-wise movement
  { on = "b", run = "backward", desc = "Move back to the start of the current or previous word" },
  { on = "w", run = "forward", desc = "Move forward to the start of the next word" },
  { on = "e", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
  { on = "<A-b>", run = "backward", desc = "Move back to the start of the current or previous word" },
  { on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
  # Line-wise movement
  { on = "0", run = "move -999", desc = "Move to the BOL" },
  { on = "$", run = "move 999", desc = "Move to the EOL" },
  { on = "<C-a>", run = "move -999", desc = "Move to the BOL" },
  { on = "<C-e>", run = "move 999", desc = "Move to the EOL" },
  { on = "<Home>", run = "move -999", desc = "Move to the BOL" },
  { on = "<End>", run = "move 999", desc = "Move to the EOL" },
  # Delete
  { on = "<Backspace>", run = "backspace", desc = "Delete the character before the cursor" },
  { on = "<Delete>", run = "backspace --under", desc = "Delete the character under the cursor" },
  { on = "<C-h>", run = "backspace", desc = "Delete the character before the cursor" },
  { on = "<C-d>", run = "backspace --under", desc = "Delete the character under the cursor" },
  # Kill
  { on = "<C-u>", run = "kill bol", desc = "Kill backwards to the BOL" },
  { on = "<C-k>", run = "kill eol", desc = "Kill forwards to the EOL" },
  { on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
  { on = "<A-d>", run = "kill forward", desc = "Kill forwards to the end of the current word" },
  # Cut/Yank/Paste
  { on = "d", run = "delete --cut", desc = "Cut the selected characters" },
  { on = "D", run = ["delete --cut", "move 999"], desc = "Cut until the EOL" },
  { on = "c", run = "delete --cut --insert", desc = "Cut the selected characters, and enter insert mode" },
  { on = "C", run = ["delete --cut --insert", "move 999"], desc = "Cut until the EOL, and enter insert mode" },
  { on = "x", run = ["delete --cut", "move 1 --in-operating"], desc = "Cut the current character" },
  { on = "y", run = "yank", desc = "Copy the selected characters" },
  { on = "p", run = "paste", desc = "Paste the copied characters after the cursor" },
  { on = "P", run = "paste --before", desc = "Paste the copied characters before the cursor" },
  # Undo/Redo
  { on = "u", run = "undo", desc = "Undo the last operation" },
  { on = "<C-r>", run = "redo", desc = "Redo the last operation" },
  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

confirm.prepend_keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel the confirm" },
  { on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },
  { on = "n", run = "close", desc = "Cancel the confirm" },
  { on = "y", run = "close --submit", desc = "Submit the confirm" },
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
  # motions
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },
  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },
  { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "<C-d>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = ["g", "g"], run = "arrow -99999999", desc = "Move cursor to the top" },
  { on = "G", run = "arrow 99999999", desc = "Move cursor to the bottom" },
]

completion.prepend_keymap = [
  { on = "<C-c>", run = "close", desc = "Cancel completion" },
  { on = "<Tab>", run = "close --submit", desc = "Submit the completion" },
  { on = "<Enter>", run = ["close --submit", "close_input --submit"], desc = "Submit the completion and input" },
  { on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<A-j>", run = "arrow 1", desc = "Move cursor down" },
  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },
  { on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<C-n>", run = "arrow 1", desc = "Move cursor down" },
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

help.prepend_keymap = [
  { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "q", run = "close", desc = "Exit the process" },
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },
  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },
  { on = "f", run = "filter", desc = "Apply a filter for the help items" },
]
