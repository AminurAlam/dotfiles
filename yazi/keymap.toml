"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

confirm.prepend_keymap = [
  { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "<C-d>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = ["g", "g"], run = "arrow top", desc = "Move cursor to the top" },
  { on = "G", run = "arrow bot", desc = "Move cursor to the bottom" },
]

help.prepend_keymap = [{ on = "q", run = "close", desc = "Exit the process" }]
input.prepend_keymap = []
tasks.prepend_keymap = [{ on = "q", run = "close", desc = "Close the spot" }]
pick.prepend_keymap = [{ on = "l", run = "close --submit" }, { on = "<right>", run = "close --submit" }]
cmp.prepend_keymap = []
spot.prepend_keymap = [{ on = "q", run = "close", desc = "Close the spot" }]

mgr.prepend_keymap = [
  # plugins
  { on = ["s", "w"], run = "plugin eza-preview", desc = "Toggle tree/list dir preview" },
  { on = ["s", "t"], run = "plugin toggle-pane min-preview" },
  { on = ["s", "T"], run = "plugin toggle-pane max-preview" },
  { on = "f", run = "plugin jump-to-char", desc = "Jump to char" },
  { on = "F", run = "plugin fzf", desc = "fzf search" },
  { on = "z", run = "plugin zoxide", desc = "Jump to a directory using zoxide" },
  { on = "l", run = "plugin smart-enter" },
  { on = "<right>", run = "plugin smart-enter" },

  { on = "^", run = "leave" },
  { on = "$", run = "enter" },
  # Selection
  { on = "%", run = "toggle_all --state=true", desc = "Select all" },
  # Operation
  { on = "o", run = "open --interactive" },
  { on = "O", run = "create" },
  { on = "d", run = "remove", desc = "Trash selected files" },
  { on = "D", run = '''shell --block --confirm -- fd -HI -td -d2 -x rmdir -p''', desc = "purge empty directories" },
  { on = ["y", "y"], run = "yank", desc = "yank file" },
  { on = ["y", "p"], run = "copy path", desc = "yank ENTIRE path" },
  { on = ["y", "f"], run = "copy filename", desc = "yank filename" },
  { on = ["y", "u"], run = "shell --confirm -- wl-copy -t text/uri-list file://$(realpath \"$0\")", desc = "yank uri" },
  { on = "p", run = ["paste", "unyank"], desc = "Paste yanked files" },
  # Tabs
  { on = "<C-Left>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "<C-Right>", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
  # Help
  { on = "?", run = "help", desc = "Open help" },
  # rename
  { on = "I", run = "rename --cursor=start --hovered" },
  { on = "i", run = "rename --cursor=before_ext --hovered" },
  { on = "a", run = "rename --cursor=end --hovered" },
  { on = "A", run = "rename --cursor=end --hovered" },
  { on = "r", run = "rename --cursor=before_ext" },
  { on = "R", run = ["toggle_all", "rename", "escape"] },
  { on = ["c", "c"], run = "rename --empty=all", desc = "rename empty" },
  { on = ["c", "0"], run = "rename --empty=stem --cursor=start", desc = "rename stem" },
  { on = ["c", "^"], run = "rename --empty=stem --cursor=start", desc = "rename stem" },
  { on = ["c", "$"], run = "rename --empty=ext --cursor=end", desc = "rename ext" },
  # sorting
  { on = [",", "m"], run = "sort mtime --reverse=no", desc = "mod time" },
  { on = [",", "M"], run = "sort mtime --reverse", desc = "" },
  { on = [",", "e"], run = "sort extension --reverse=no", desc = "ext" },
  { on = [",", "E"], run = "sort extension --reverse", desc = "" },
  { on = [",", "a"], run = "sort alphabetical --reverse=no", desc = "alpha" },
  { on = [",", "A"], run = "sort alphabetical --reverse", desc = "" },
  { on = [",", "n"], run = "sort natural --reverse=no", desc = "nat" },
  { on = [",", "N"], run = "sort natural --reverse", desc = "" },
  { on = [",", "s"], run = ["sort size --reverse=no", "linemode size"], desc = "size" },
  { on = [",", "S"], run = ["sort size --reverse", "linemode size"], desc = "" },
  { on = [",", "b"], run = ["sort btime --reverse=no"], desc = "creates" },
  { on = [",", "B"], run = ["sort btime --reverse"], desc = "" },
  # other
  # { on = ":", run = '''shell "fish -c " --block --interactive''' },
  { on = ";", run = "noop" },
  { on = "<C-g>", run = '''shell --block --confirm -- nvim +Telescope\ live_grep''', desc = "rg search" },
  { on = ".", run = "hidden toggle" },
  { on = "<Esc>", run = ["escape", "unyank"], desc = "Exit visual mode, clear selection, or cancel search" },
]
