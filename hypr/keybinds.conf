# vim:ft=hyprlang:

#############
### INPUT ###
#############

input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options = caps:swapescape,numpad:mac,grp_led:num
    kb_rules =

    repeat_rate = 40
    repeat_delay = 350

    follow_mouse = 1

    sensitivity = .2 # -1.0 - 1.0, 0 means no modification.
    force_no_accel = false

    touchpad {
        disable_while_typing = false
        natural_scroll = true
        scroll_factor = 0.4
        drag_lock = 0
    }
}

gestures {
    workspace_swipe = true
    workspace_swipe_direction_lock = false
    workspace_swipe_distance = 150
}

###################
### KEYBINDINGS ###
###################

### main
$term = alacritty
$fm = $term -e yazi --client-id=48937
$browser = librewolf
$menu = fuzzel
$su = SUPER


bind = $su, Q, killactive,
bind = $su, W, exec, pidof $menu || $menu
bind = $su, E, exec, $fm

bind = $su, A, exec, $term
bind = $su, S, exec, $browser
bind = $su, D, togglefloating,
bind = $su, F, fullscreen
bind = $su, H, movefocus, l
bind = $su, J, movefocus, d
bind = $su, K, movefocus, u
bind = $su, L, movefocus, r

bind = $su, Z, togglesplit,
bind = $su, M, exit,

### screenshot
$ss = ~/Pictures/Screenshots/Screenshot_$(date +'%Y%m%d_%H%M%S')_grim.png && notify-send "Screenshot_$(date +'%Y%m%d_%H%M%S')_grim.png taken"
bind = $su,       p, exec, grim -g "$(slurp)" $ss
bind = $su SHIFT, P, exec, grim $ss

### workspace
# Switch workspaces
bind = $su CTRL, h, workspace, e-1
bind = $su CTRL, j, workspace, e-1
bind = $su CTRL, k, workspace, e+1
bind = $su CTRL, l, workspace, e+1
bind = $su, 1, workspace, 1
bind = $su, 2, workspace, 2
bind = $su, 3, workspace, 3
bind = $su, 4, workspace, 4
bind = $su, 5, workspace, 5
bind = $su, 6, workspace, 6
bind = $su, 7, workspace, 7
bind = $su, 8, workspace, 8
bind = $su, 9, workspace, 9
bind = $su, 0, workspace, 10
# Move active window to a workspace
bind = $su SHIFT, h, movetoworkspace, r-1
bind = $su SHIFT, j, movetoworkspace, r-1
bind = $su SHIFT, k, movetoworkspace, r+1
bind = $su SHIFT, l, movetoworkspace, r+1
bind = $su SHIFT, 1, movetoworkspace, 1
bind = $su SHIFT, 2, movetoworkspace, 2
bind = $su SHIFT, 3, movetoworkspace, 3
bind = $su SHIFT, 4, movetoworkspace, 4
bind = $su SHIFT, 5, movetoworkspace, 5
bind = $su SHIFT, 6, movetoworkspace, 6
bind = $su SHIFT, 7, movetoworkspace, 7
bind = $su SHIFT, 8, movetoworkspace, 8
bind = $su SHIFT, 9, movetoworkspace, 9
bind = $su SHIFT, 0, movetoworkspace, 10

### Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $su, mouse:272, resizewindow
bindm = $su, mouse:273, movewindow
bindm = $su ALT, h, movewindow left # TODO: swap?
bindm = $su ALT, j, movewindow down
bindm = $su ALT, k, movewindow up
bindm = $su ALT, l, movewindow right

### function row
$vol = ; notify-send -h string:x-canonical-private-synchronous:volume -t 500 "Volume: $(wpctl get-volume @DEFAULT_AUDIO_SINK@ | tr -dc [:digit:] | sed -r 's/^0+//')"
$brightness =  ; notify-send -h string:x-canonical-private-synchronous:brightness -t 500 "Brightness: $(( $(brightnessctl g) * 100 / $(brightnessctl m) ))"

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+ $vol
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%- $vol
bindel = $su SHIFT, v         , exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+ $vol
bindel = $su      , v         , exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%- $vol
# mute
bindl = ,XF86AudioMute,    exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
# brightness
bindel =    ,XF86MonBrightnessUp  , exec, brightnessctl s 2%+ $brightness
bindel =    ,XF86MonBrightnessDown, exec, brightnessctl s 2%- $brightness
bindel = $su,XF86MonBrightnessUp  , exec, brightnessctl s 10%+ $brightness
bindel = $su,XF86MonBrightnessDown, exec, brightnessctl s 10%- $brightness
bindel = $su SHIFT, c             , exec, brightnessctl s 2%- $brightness
bindel = $su, c                   , exec, brightnessctl s 2%+ $brightness
# other
bindl = ,    Help, exec, powerprofilesctl set $(powerprofilesctl get | grep -q balanced && echo performance || echo balanced); notify-send -h string:x-canonical-private-synchronous:volume -t 500 "$(powerprofilesctl get)"
bindl = $su, Help, exec, ~/.config/hypr/gamemode.sh
# Requires playerctl
bindl = ,XF86AudioNext , exec, playerctl next
bindl = ,XF86AudioPause, exec, playerctl play-pause
bindl = ,XF86AudioPlay , exec, playerctl play-pause
bindl = ,XF86AudioPrev , exec, playerctl previous
